type Plan {
  timestamp: String
  exercises: [ExercisesList]
}

type Exercise1 {
  name: String
  sets: Int
  reps: Int
  weight: Int
}

type User {
  Email: String
  FirstName: String
  Gender: String
  LastName: String
  Password: String
  Plans: [PlansList]
  #questionnaires: [Questionnaire]
  #  @materializer(
  #    query: "getQuestionnairesByUserId"
  #   arguments: { userId: "$.name" }
  #)
}

type ExercisesList{
  name:ID
  value: Exercise1
}

type PlansList{
  name:ID
  value: Plan
}

type UsersList{
  name:ID
  value: User
}

type Query {
  getUsersById(id: ID!): User
    @rest(
      endpoint: "https://project1---flexicoach-default-rtdb.europe-west1.firebasedatabase.app/users/$id.json"
    )

  getUsers: [UsersList]
    @rest(
      endpoint: "https://project1---flexicoach-default-rtdb.europe-west1.firebasedatabase.app/users.json"
      transforms: [{pathpattern: [], editor: "objectToArray"}]
    )

  getUserByEmail(Email: String!): [UsersList]
    @rest(
      endpoint: "https://project1---flexicoach-default-rtdb.europe-west1.firebasedatabase.app/users.json?orderBy=%22Email%22&equalTo=%22$Email%22"
      transforms: [{ pathpattern: [], editor: "objectToArray" }]
    )

  checkExerciseExistsInPlan(id: ID!, planId: ID!, name: String) : [ExercisesList]
    @rest(
      endpoint: "https://project1---flexicoach-default-rtdb.europe-west1.firebasedatabase.app/users/$id/Plans/$planId/exercises.json?orderBy=%22name%22&equalTo=%22$name%22"
      transforms: [{ pathpattern: [], editor: "objectToArray" }]
    )
}

type Mutation {
  createUser(Email: String!, FirstName:String!, LastName:String!, Gender:String!, Password:String!): UsersList
    @rest(
      endpoint: "https://project1---flexicoach-default-rtdb.europe-west1.firebasedatabase.app/users.json"
      method: POST
      postbody: """
        { 
          "Email": "{{.Get "Email"}}",
          "FirstName": "{{.Get "FirstName"}}",
          "LastName" : "{{.Get "LastName"}}",
          "Gender" : "{{.Get "Gender"}}",
          "Password" : "{{.Get "Password"}}"
        }
      """
    )

  addPlan(id: ID!, timestamp: String!) : UsersList
    @rest(
      endpoint: "https://project1---flexicoach-default-rtdb.europe-west1.firebasedatabase.app/users/$id/Plans.json"
      method: POST
      postbody: """
        {
          "timestamp": "{{.Get "timestamp"}}"
        }
      """
    )

  addExerciseToPlan(id: ID!, planId: ID!, name: String, sets: Int, reps: Int, weight: Int) : UsersList
    @rest(
      endpoint: "https://project1---flexicoach-default-rtdb.europe-west1.firebasedatabase.app/users/$id/Plans/$planId/exercises.json"
      method: POST
      postbody: """
        {
          "name": "{{.Get "name"}}",
          "sets": {{.Get "sets"}},
          "reps": {{.Get "reps"}},
          "weight": {{.Get "weight"}}
        }
      """
    )

 updateExerciseInPlan(id: ID!, planId: ID!,exerciseId:ID!, completedSets:Int, completedReps: Int) : UsersList
    @rest(
      endpoint: "https://project1---flexicoach-default-rtdb.europe-west1.firebasedatabase.app/users/$id/Plans/$planId/exercises/$exerciseId.json"
      method: PATCH
      postbody: """
        {
          "completedSets": {{.Get "completedSets"}},
          "completedReps": {{.Get "completedReps"}}
        }
      """
    )
  updateUser(id: ID!,FirstName:String!, LastName:String): User
        @rest(
          endpoint: "https://project1---flexicoach-default-rtdb.europe-west1.firebasedatabase.app/users/$id.json"
          method: PATCH
          postbody: """
            { 
              "FirstName": "{{.Get "FirstName"}}",
              "LastName" : "{{.Get "LastName"}}"
            }
          """
        )
} 
